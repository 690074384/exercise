<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exercise.mapper.EntPaperUserQuestionMapper">
    <resultMap id="BaseResultMap" type="com.exercise.po.EntPaperUserQuestion">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="paper_user_record_id" property="paper_user_record_id" jdbcType="INTEGER"/>
        <result column="sequence" property="sequence" jdbcType="INTEGER"/>
        <result column="question_id" property="question_id" jdbcType="INTEGER"/>
        <result column="question_sub_id" property="question_sub_id" jdbcType="INTEGER"/>
        <result column="question_id_source" property="question_id_source" jdbcType="VARCHAR"/>
        <result column="question_type" property="question_type" jdbcType="VARCHAR"/>
        <result column="mark_paper_way" property="mark_paper_way" jdbcType="TINYINT"/>
        <result column="correct_flag" property="correct_flag" jdbcType="TINYINT"/>
        <result column="answer_time" property="answer_time" jdbcType="INTEGER"/>
        <result column="score" property="score" jdbcType="REAL"/>
        <result column="create_time" property="create_time" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="update_time" jdbcType="TIMESTAMP"/>
        <result column="operator" property="operator" jdbcType="VARCHAR"/>
        <result column="delete_flag" property="delete_flag" jdbcType="TINYINT"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.exercise.po.EntPaperUserQuestion" extends="BaseResultMap">
        <result column="answer" property="answer" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, paper_user_record_id, sequence, question_id, question_sub_id, question_id_source, 
    question_type, mark_paper_way, correct_flag, answer_time, score, create_time, update_time, 
    operator, delete_flag
  </sql>
    <sql id="Blob_Column_List">
    answer
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from ent_paper_user_question_00
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ent_paper_user_question_00
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.exercise.po.EntPaperUserQuestion">
    insert into ent_paper_user_question_00 (id, paper_user_record_id, sequence, 
      question_id, question_sub_id, question_id_source, 
      question_type, mark_paper_way, correct_flag, 
      answer_time, score, create_time, 
      update_time, operator, delete_flag, 
      answer)
    values (#{id,jdbcType=INTEGER}, #{paper_user_record_id,jdbcType=INTEGER}, #{sequence,jdbcType=INTEGER}, 
      #{question_id,jdbcType=INTEGER}, #{question_sub_id,jdbcType=INTEGER}, #{question_id_source,jdbcType=VARCHAR}, 
      #{question_type,jdbcType=VARCHAR}, #{mark_paper_way,jdbcType=TINYINT}, #{correct_flag,jdbcType=TINYINT}, 
      #{answer_time,jdbcType=INTEGER}, #{score,jdbcType=REAL}, #{create_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}, #{delete_flag,jdbcType=TINYINT}, 
      #{answer,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.exercise.po.EntPaperUserQuestion">
        insert into ent_paper_user_question_00
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="paper_user_record_id != null">
                paper_user_record_id,
            </if>
            <if test="sequence != null">
                sequence,
            </if>
            <if test="question_id != null">
                question_id,
            </if>
            <if test="question_sub_id != null">
                question_sub_id,
            </if>
            <if test="question_id_source != null">
                question_id_source,
            </if>
            <if test="question_type != null">
                question_type,
            </if>
            <if test="mark_paper_way != null">
                mark_paper_way,
            </if>
            <if test="correct_flag != null">
                correct_flag,
            </if>
            <if test="answer_time != null">
                answer_time,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="create_time != null">
                create_time,
            </if>
            <if test="update_time != null">
                update_time,
            </if>
            <if test="operator != null">
                operator,
            </if>
            <if test="delete_flag != null">
                delete_flag,
            </if>
            <if test="answer != null">
                answer,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="paper_user_record_id != null">
                #{paper_user_record_id,jdbcType=INTEGER},
            </if>
            <if test="sequence != null">
                #{sequence,jdbcType=INTEGER},
            </if>
            <if test="question_id != null">
                #{question_id,jdbcType=INTEGER},
            </if>
            <if test="question_sub_id != null">
                #{question_sub_id,jdbcType=INTEGER},
            </if>
            <if test="question_id_source != null">
                #{question_id_source,jdbcType=VARCHAR},
            </if>
            <if test="question_type != null">
                #{question_type,jdbcType=VARCHAR},
            </if>
            <if test="mark_paper_way != null">
                #{mark_paper_way,jdbcType=TINYINT},
            </if>
            <if test="correct_flag != null">
                #{correct_flag,jdbcType=TINYINT},
            </if>
            <if test="answer_time != null">
                #{answer_time,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=REAL},
            </if>
            <if test="create_time != null">
                #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="update_time != null">
                #{update_time,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
            <if test="delete_flag != null">
                #{delete_flag,jdbcType=TINYINT},
            </if>
            <if test="answer != null">
                #{answer,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.exercise.po.EntPaperUserQuestion">
        update ent_paper_user_question_00
        <set>
            <if test="paper_user_record_id != null">
                paper_user_record_id = #{paper_user_record_id,jdbcType=INTEGER},
            </if>
            <if test="sequence != null">
                sequence = #{sequence,jdbcType=INTEGER},
            </if>
            <if test="question_id != null">
                question_id = #{question_id,jdbcType=INTEGER},
            </if>
            <if test="question_sub_id != null">
                question_sub_id = #{question_sub_id,jdbcType=INTEGER},
            </if>
            <if test="question_id_source != null">
                question_id_source = #{question_id_source,jdbcType=VARCHAR},
            </if>
            <if test="question_type != null">
                question_type = #{question_type,jdbcType=VARCHAR},
            </if>
            <if test="mark_paper_way != null">
                mark_paper_way = #{mark_paper_way,jdbcType=TINYINT},
            </if>
            <if test="correct_flag != null">
                correct_flag = #{correct_flag,jdbcType=TINYINT},
            </if>
            <if test="answer_time != null">
                answer_time = #{answer_time,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=REAL},
            </if>
            <if test="create_time != null">
                create_time = #{create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="update_time != null">
                update_time = #{update_time,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                operator = #{operator,jdbcType=VARCHAR},
            </if>
            <if test="delete_flag != null">
                delete_flag = #{delete_flag,jdbcType=TINYINT},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.exercise.po.EntPaperUserQuestion">
    update ent_paper_user_question_00
    set paper_user_record_id = #{paper_user_record_id,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=INTEGER},
      question_id = #{question_id,jdbcType=INTEGER},
      question_sub_id = #{question_sub_id,jdbcType=INTEGER},
      question_id_source = #{question_id_source,jdbcType=VARCHAR},
      question_type = #{question_type,jdbcType=VARCHAR},
      mark_paper_way = #{mark_paper_way,jdbcType=TINYINT},
      correct_flag = #{correct_flag,jdbcType=TINYINT},
      answer_time = #{answer_time,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      delete_flag = #{delete_flag,jdbcType=TINYINT},
      answer = #{answer,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.exercise.po.EntPaperUserQuestion">
    update ent_paper_user_question_00
    set paper_user_record_id = #{paper_user_record_id,jdbcType=INTEGER},
      sequence = #{sequence,jdbcType=INTEGER},
      question_id = #{question_id,jdbcType=INTEGER},
      question_sub_id = #{question_sub_id,jdbcType=INTEGER},
      question_id_source = #{question_id_source,jdbcType=VARCHAR},
      question_type = #{question_type,jdbcType=VARCHAR},
      mark_paper_way = #{mark_paper_way,jdbcType=TINYINT},
      correct_flag = #{correct_flag,jdbcType=TINYINT},
      answer_time = #{answer_time,jdbcType=INTEGER},
      score = #{score,jdbcType=REAL},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR},
      delete_flag = #{delete_flag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- 以上为自动生成部分-->

    <insert id="insertOne" parameterType="map" keyProperty="id" useGeneratedKeys="true" statementType="STATEMENT">
        insert into ${table_choose} (paper_user_record_id, sequence,
        question_id,
        <if test="question_sub_id != null">
            question_sub_id,
        </if>
        question_id_source,
        question_type, mark_paper_way, correct_flag,
        answer_time, score, operator, delete_flag,
        answer)
        values (${paper_user_record_id}, ${sequence},
        ${question_id},
        <if test="question_sub_id != null">
            ${question_sub_id},
        </if>
        ${question_id_source},
        ${question_type}, ${mark_paper_way}, ${correct_flag},
        ${answer_time}, ${score},${operator}, ${delete_flag},
        ${answer})
    </insert>


</mapper>